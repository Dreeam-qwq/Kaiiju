From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kugge <sofiane.djerbi38@gmail.com>
Date: Mon, 13 Feb 2023 00:53:40 +0100
Subject: [PATCH] Kaiiju Lobotomize Villager


diff --git a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
index c760ebaade1cbf7360c32c1ab1d9d54bb9212a57..e159739dd6d1fcc365cce5013fe52f32a5e6c0dd 100644
--- a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
+++ b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
@@ -127,11 +127,19 @@ public class KaiijuWorldConfig {
     public int lobotomizeCheckInterval = 100;
     public boolean lobotomizeLookAtPlayer = false;
     public boolean lobotomizeFloat = true;
+    public boolean lobotomizeVillagerEnabled = false;
+    public int lobotomizeVillagerCheckInterval = 100;
+    public boolean lobotomizeVillagerCheckOnBed = true;
+    public boolean lobotomizeVillagerCheckJobBlock = true;
 
     private void lobotomizeSettings() {
         lobotomizeEnabled = getBoolean("lobotomize.animal.enabled", lobotomizeEnabled);
         lobotomizeCheckInterval = getInt("lobotomize.animal.check-interval", lobotomizeCheckInterval);
         lobotomizeLookAtPlayer = getBoolean("lobotomize.animal.look-at-player", lobotomizeLookAtPlayer);
         lobotomizeFloat = getBoolean("lobotomize.animal.float", lobotomizeFloat);
+        lobotomizeVillagerEnabled = getBoolean("lobotomize.villager.enabled", lobotomizeVillagerEnabled);
+        lobotomizeVillagerCheckInterval = getInt("lobotomize.villager.check-interval", lobotomizeVillagerCheckInterval);
+        lobotomizeVillagerCheckOnBed = getBoolean("lobotomize.villager.check-on-bed", lobotomizeVillagerCheckOnBed);
+        lobotomizeVillagerCheckJobBlock = getBoolean("lobotomize.villager.check-job-block", lobotomizeVillagerCheckJobBlock);
     }
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index aed1d9ccffe471b6c2a1d52d2d3d097f6431318b..9469419d32336e93d2653fbad2139a9bf9ee576d 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -200,15 +200,14 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     private boolean checkLobotomized() {
-        int interval = this.level.purpurConfig.villagerLobotomizeCheckInterval;
+        int interval = this.level.kaiijuConfig.lobotomizeVillagerCheckInterval; // Kaiiju
         if (this.notLobotomizedCount > 3) {
             // check half as often if not lobotomized for the last 3+ consecutive checks
             interval *= 2;
         }
-        if (this.level.getGameTime() % interval == 0) {
+        if ((this.getId() + this.tickCount) % interval == 0) { // Kaiiju - Avoid check lags
             // offset Y for short blocks like dirt_path/farmland
-            this.isLobotomized = !canTravelFrom(new BlockPos(getX(), getY() + 0.0625D, getZ()));
-
+            this.isLobotomized = needLobotomy(); // Kaiiju - Override
             if (this.isLobotomized) {
                 this.notLobotomizedCount = 0;
             } else {
@@ -222,7 +221,48 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         return canTravelTo(pos.east()) || canTravelTo(pos.west()) || canTravelTo(pos.north()) || canTravelTo(pos.south());
     }
 
+    // Kaiiju start - Better canTravelTo checks
+    private boolean needLobotomy() {
+        if (this.isSleeping()) return false;
+        if (this.level.kaiijuConfig.lobotomizeVillagerCheckOnBed && isOnBed()) return false;
+        return !canTravelFrom(new BlockPos(getX(), getY() + 0.5D, getZ()));
+    }
+
     private boolean canTravelTo(BlockPos pos) {
+        net.minecraft.world.level.block.state.BlockState bottom = this.level.getBlockStateIfLoaded(pos);
+        if (bottom == null) return false;
+        if (!bottom.isPathfindable(level, pos, net.minecraft.world.level.pathfinder.PathComputationType.LAND)) return false;
+        if (this.level.kaiijuConfig.lobotomizeVillagerCheckJobBlock && isJobSite(bottom.getBlock(), this.getVillagerData().getProfession())) return true;
+        net.minecraft.world.level.block.state.BlockState top = this.level.getBlockStateIfLoaded(pos.above());
+        if (!top.isPathfindable(level, pos, net.minecraft.world.level.pathfinder.PathComputationType.LAND)) return false;
+        return true;
+    }
+
+    private boolean isOnBed() {
+        BlockPos pos = new BlockPos(getX(), getY() - 0.9375D, getZ());
+        net.minecraft.world.level.block.Block below = this.level.getBlockIfLoaded(pos);
+        return below instanceof net.minecraft.world.level.block.BedBlock;
+    }
+
+    private static boolean isJobSite(net.minecraft.world.level.block.Block block, VillagerProfession profession) { // This is awful
+        if (profession == VillagerProfession.NITWIT) return false;
+        return (block instanceof net.minecraft.world.level.block.BlastFurnaceBlock && profession != VillagerProfession.ARMORER) ||
+               (block instanceof net.minecraft.world.level.block.SmokerBlock && profession != VillagerProfession.BUTCHER) ||
+               (block instanceof net.minecraft.world.level.block.CartographyTableBlock && profession != VillagerProfession.CARTOGRAPHER) ||
+               (block instanceof net.minecraft.world.level.block.BrewingStandBlock && profession != VillagerProfession.CLERIC) ||
+               (block instanceof net.minecraft.world.level.block.ComposterBlock && profession != VillagerProfession.FARMER) ||
+               (block instanceof net.minecraft.world.level.block.BarrelBlock && profession != VillagerProfession.FISHERMAN) ||
+               (block instanceof net.minecraft.world.level.block.FletchingTableBlock && profession != VillagerProfession.FLETCHER) ||
+               (block instanceof net.minecraft.world.level.block.CauldronBlock && profession != VillagerProfession.LEATHERWORKER) ||
+               (block instanceof net.minecraft.world.level.block.LecternBlock && profession != VillagerProfession.LIBRARIAN) ||
+               (block instanceof net.minecraft.world.level.block.StonecutterBlock && profession != VillagerProfession.MASON) ||
+               (block instanceof net.minecraft.world.level.block.LoomBlock && profession != VillagerProfession.SHEPHERD) ||
+               (block instanceof net.minecraft.world.level.block.SmithingTableBlock && profession != VillagerProfession.TOOLSMITH) ||
+               (block instanceof net.minecraft.world.level.block.GrindstoneBlock && profession != VillagerProfession.WEAPONSMITH);
+    }
+    // Kaiiju end
+
+    private boolean canTravelToLegacy(BlockPos pos) { // Kaiiju - Deprecated
         net.minecraft.world.level.block.state.BlockState state = this.level.getBlockStateIfLoaded(pos);
         if (state == null) {
             // chunk not loaded
@@ -337,7 +377,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void mobTick(boolean inactive) {
         //this.level.getProfiler().push("villagerBrain"); // Purpur
         // Purpur start
-        if (this.level.purpurConfig.villagerLobotomizeEnabled) {
+        if (this.level.kaiijuConfig.lobotomizeVillagerEnabled) { // Kaiiju - Override
             // treat as inactive if lobotomized
             inactive = inactive || checkLobotomized();
         } else {
@@ -647,6 +687,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         if (this.assignProfessionWhenSpawned) {
             nbt.putBoolean("AssignProfessionWhenSpawned", true);
         }
+        nbt.putBoolean("Kaiiju.Lobotomized", this.isLobotomized()); // Kaiiju
 
     }
 
@@ -687,6 +728,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         if (nbt.contains("AssignProfessionWhenSpawned")) {
             this.assignProfessionWhenSpawned = nbt.getBoolean("AssignProfessionWhenSpawned");
         }
+        this.isLobotomized = nbt.getBoolean("Kaiiju.Lobotomized"); // Kaiiju
 
     }
 
