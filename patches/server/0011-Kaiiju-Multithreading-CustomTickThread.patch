From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Sofiane H. Djerbi" <46628754+kugge@users.noreply.github.com>
Date: Fri, 31 Mar 2023 07:25:58 +0300
Subject: [PATCH] Kaiiju Multithreading CustomTickThread


diff --git a/src/main/java/dev/kaiijumc/kaiiju/KaiijuConfig.java b/src/main/java/dev/kaiijumc/kaiiju/KaiijuConfig.java
index e33bd01e948308b479fd85715fff109a7d3c5081..aa0acde41ec61d788d32f58f2583fbd0c610bb60 100644
--- a/src/main/java/dev/kaiijumc/kaiiju/KaiijuConfig.java
+++ b/src/main/java/dev/kaiijumc/kaiiju/KaiijuConfig.java
@@ -210,6 +210,9 @@ public class KaiijuConfig {
         alternateKeepAlive = getBoolean("network.alternate-keepalive", sendNullEntityPackets);
     }
 
+    public static int tickThreads = -1;
+
     private static void multithreadingSettings() {
+        tickThreads = getInt("multithreading.tick-threads", tickThreads);
     }
 }
diff --git a/src/main/java/io/papermc/paper/threadedregions/TickRegions.java b/src/main/java/io/papermc/paper/threadedregions/TickRegions.java
index 1cc7c32690ba7f7d7cdcbe239314f30f49ecb7bc..f7525293bd0fbb5ec9fff84117f9331616d704cd 100644
--- a/src/main/java/io/papermc/paper/threadedregions/TickRegions.java
+++ b/src/main/java/io/papermc/paper/threadedregions/TickRegions.java
@@ -51,6 +51,8 @@ public final class TickRegions implements ThreadedRegionizer.RegionCallbacks<Tic
             tickThreads = config.threads;
         }
 
+        if(dev.kaiijumc.kaiiju.KaiijuConfig.tickThreads > 0) tickThreads = dev.kaiijumc.kaiiju.KaiijuConfig.tickThreads; // Kaiiju
+
         scheduler = new TickRegionScheduler(tickThreads);
         LOGGER.info("Regionised ticking is enabled with " + tickThreads + " tick threads");
     }
