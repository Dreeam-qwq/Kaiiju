From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Thu, 22 Jun 2023 00:47:57 +0200
Subject: [PATCH] Option to disable creatures spawn events


diff --git a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
index 31d66bb2fcf4bb7262df2d8006e307fee92660ea..c9830912019079369268bfbf2c95de18ad598f52 100644
--- a/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
+++ b/src/main/java/dev/kaiijumc/kaiiju/KaiijuWorldConfig.java
@@ -151,6 +151,7 @@ public class KaiijuWorldConfig {
     public boolean tickWhenEmpty = true;
     public boolean enableEntityThrottling = false;
     public boolean disableAchievements = false;
+    public boolean disableCreaturesSpawnEvents = false;
 
     private void optimizationSettings() {
         shulkerBoxDropContentsWhenDestroyed = getBoolean("optimization.shulker-box-drop-contents-when-destroyed", shulkerBoxDropContentsWhenDestroyed);
@@ -158,6 +159,7 @@ public class KaiijuWorldConfig {
         tickWhenEmpty = getBoolean("optimization.tick-when-empty", tickWhenEmpty);
         enableEntityThrottling = getBoolean("optimization.enable-entity-throttling", enableEntityThrottling);
         disableAchievements = getBoolean("optimization.disable-achievements", disableAchievements);
+        disableCreaturesSpawnEvents = getBoolean("optimization.disable-creatures-spawn-events", disableCreaturesSpawnEvents);
     }
 
     public boolean fixVoidTrading = true;
diff --git a/src/main/java/net/minecraft/server/level/ServerChunkCache.java b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
index 88db5ada13329a5fe0d0fb652d2c8a8d561649e8..a0d46e8cbaf3df9213772be25d9f8265714fef7f 100644
--- a/src/main/java/net/minecraft/server/level/ServerChunkCache.java
+++ b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
@@ -532,7 +532,11 @@ public class ServerChunkCache extends ChunkSource {
                     chunkRange = (chunkRange > viewDistance) ? viewDistance : chunkRange;
                     chunkRange = (chunkRange > DistanceManager.MOB_SPAWN_RANGE) ? DistanceManager.MOB_SPAWN_RANGE : chunkRange;
 
-                    com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent event = new com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent(player.getBukkitEntity(), (byte)chunkRange);
+                    // Kaiiju start - disable creatures spawn events
+                    com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent event = null;
+                    if (!this.level.kaiijuConfig.disableCreaturesSpawnEvents) {
+                    event = new com.destroystokyo.paper.event.entity.PlayerNaturallySpawnCreaturesEvent(player.getBukkitEntity(), (byte)chunkRange);
+                    // Kaiiju end
                     event.callEvent();
                     if (event.isCancelled() || event.getSpawnRadius() < 0) {
                         regionizedWorldData.mobSpawnMap.remove(player); // Folia - region threading
@@ -540,14 +544,18 @@ public class ServerChunkCache extends ChunkSource {
                         player.lastEntitySpawnRadiusSquared = -1.0;
                         continue;
                     }
+                    // Kaiiju start - disable creatures spawn events
+                    chunkRange = Math.min(event.getSpawnRadius(), DistanceManager.MOB_SPAWN_RANGE);
+                    }
+                    // Kaiiju end
 
-                    int range = Math.min(event.getSpawnRadius(), DistanceManager.MOB_SPAWN_RANGE); // limit to max spawn range
+                    int range = chunkRange; // limit to max spawn range // Kaiiju
                     int chunkX = io.papermc.paper.util.CoordinateUtils.getChunkCoordinate(player.getX());
                     int chunkZ = io.papermc.paper.util.CoordinateUtils.getChunkCoordinate(player.getZ());
 
                     regionizedWorldData.mobSpawnMap.addOrUpdate(player, chunkX, chunkZ, range); // Folia - region threading
                     player.lastEntitySpawnRadiusSquared = (double)((range << 4) * (range << 4)); // used in anyPlayerCloseEnoughForSpawning
-                    player.playerNaturallySpawnedEvent = event;
+                    if (!this.level.kaiijuConfig.disableCreaturesSpawnEvents) player.playerNaturallySpawnedEvent = event; // Kaiiju
                 }
                 // Paper end - optimise chunk tick iteration
                 int l = this.level.getGameRules().getInt(GameRules.RULE_RANDOMTICKING);
